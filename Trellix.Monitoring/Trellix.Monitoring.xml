<!--
==========
CHANGE LOG
==========
2023.5.16.4
-Initial release.
-->
<ManagementPack ContentReadable="true" SchemaVersion="2.0" OriginalSchemaVersion="1.1" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
	<Manifest>
		<Identity>
			<ID>Trellix.Monitoring</ID>
			<Version>2023.5.16.4</Version>
		</Identity>
		<Name>Trellix.Monitoring</Name>
		<References>
			<Reference Alias="Windows">
				<ID>Microsoft.Windows.Library</ID>
				<Version>7.5.8501.0</Version>
				<PublicKeyToken>31bf3856ad364e35</PublicKeyToken>
			</Reference>
			<Reference Alias="System">
				<ID>System.Library</ID>
				<Version>7.5.8501.0</Version>
				<PublicKeyToken>31bf3856ad364e35</PublicKeyToken>
			</Reference>
			<Reference Alias="SystemCenter">
				<ID>Microsoft.SystemCenter.Library</ID>
				<Version>7.0.8433.0</Version>
				<PublicKeyToken>31bf3856ad364e35</PublicKeyToken>
			</Reference>
			<Reference Alias="Health">
				<ID>System.Health.Library</ID>
				<Version>7.0.8433.0</Version>
				<PublicKeyToken>31bf3856ad364e35</PublicKeyToken>
			</Reference>
			<Reference Alias="MSIL">
				<ID>Microsoft.SystemCenter.InstanceGroup.Library</ID>
				<Version>7.5.8501.0</Version>
				<PublicKeyToken>31bf3856ad364e35</PublicKeyToken>
			</Reference>
		</References>
	</Manifest>
	<TypeDefinitions>
		<EntityTypes>
			<ClassTypes>
				<ClassType ID="Trellix.Class.ePolicyOrchestrator" Accessibility="Public" Abstract="false" Base="Windows!Microsoft.Windows.LocalApplication" Hosted="true" Singleton="false" Extension="false">
					<Property ID="InstallFolder" Type="string" AutoIncrement="false" Key="false" CaseSensitive="false" MaxLength="256" MinLength="0" Required="false" Scale="0"/>
				</ClassType>
				<ClassType ID="Trellix.Class.AgentHandler" Accessibility="Public" Abstract="false" Base="Windows!Microsoft.Windows.LocalApplication" Hosted="true" Singleton="false" Extension="false">
					<Property ID="InstallFolder" Type="string" AutoIncrement="false" Key="false" CaseSensitive="false" MaxLength="256" MinLength="0" Required="false" Scale="0"/>
				</ClassType>
				<ClassType ID="Trellix.Class.Agent" Accessibility="Public" Abstract="false" Base="Windows!Microsoft.Windows.LocalApplication" Hosted="true" Singleton="false" Extension="false">
					<Property ID="Version" Type="string" AutoIncrement="false" Key="false" CaseSensitive="false" MaxLength="256" MinLength="0" Required="false" Scale="0"/>
					<Property ID="InstallFolder" Type="string" AutoIncrement="false" Key="false" CaseSensitive="false" MaxLength="256" MinLength="0" Required="false" Scale="0"/>
				</ClassType>
				<ClassType ID="Trellix.Class.Service" Accessibility="Public" Abstract="false" Base="Windows!Microsoft.Windows.LocalApplication" Hosted="true" Singleton="false" Extension="false">
					<Property ID="ServiceName" Type="string" AutoIncrement="false" Key="true" CaseSensitive="false" MaxLength="256" MinLength="0" Required="false" Scale="0"/>
					<Property ID="ServiceDisplayName" Type="string" AutoIncrement="false" Key="true" CaseSensitive="false" MaxLength="256" MinLength="0" Required="false" Scale="0"/>
					<Property ID="StartMode" Type="string" AutoIncrement="false" Key="true" CaseSensitive="false" MaxLength="256" MinLength="0" Required="false" Scale="0"/>
				</ClassType>
			</ClassTypes>
		</EntityTypes>
		<MonitorTypes>
			<!-- Trellix.MonitorType.AgentInstall -->
			<UnitMonitorType ID="Trellix.MonitorType.AgentInstall" Accessibility="Public">
				<MonitorTypeStates>
					<MonitorTypeState ID="RegKeyExists" NoDetection="false"/>
					<MonitorTypeState ID="RegKeyMissing" NoDetection="false"/>
				</MonitorTypeStates>
				<Configuration/>
				<MonitorImplementation>
					<MemberModules>
						<DataSource ID="RegDS" TypeID="Windows!Microsoft.Windows.RegistryProvider">
							<ComputerName>$Target/Host/Property[Type="Windows!Microsoft.Windows.Computer"]/PrincipalName$</ComputerName>
							<RegistryAttributeDefinitions>
								<RegistryAttributeDefinition>
									<AttributeName>AgentInstalled</AttributeName>
									<Path>SOFTWARE\WOW6432Node\Network Associates\ePolicy Orchestrator\Application Plugins\EPOAGENT3000\Version</Path>
									<!-- For testing.
									<Path>SOFTWARE\WOW6432Node\Network Associates\ePolicy Orchestrator\Version</Path>
									-->
									<PathType>1</PathType>
									<AttributeType>0</AttributeType>
								</RegistryAttributeDefinition>
							</RegistryAttributeDefinitions>
							<!-- 12 hours. -->
							<Frequency>43200</Frequency>
						</DataSource>
						<ConditionDetection ID="CDExists" TypeID="System!System.ExpressionFilter">
							<Expression>
								<SimpleExpression>
									<ValueExpression>
										<XPathQuery Type="Boolean">Values/AgentInstalled</XPathQuery>
									</ValueExpression>
									<Operator>Equal</Operator>
									<ValueExpression>
										<Value Type="Boolean">true</Value>
									</ValueExpression>
								</SimpleExpression>
							</Expression>
						</ConditionDetection>
						<ConditionDetection ID="CDMissing" TypeID="System!System.ExpressionFilter">
							<Expression>
								<SimpleExpression>
									<ValueExpression>
										<XPathQuery Type="Boolean">Values/AgentInstalled</XPathQuery>
									</ValueExpression>
									<Operator>Equal</Operator>
									<ValueExpression>
										<Value Type="Boolean">false</Value>
									</ValueExpression>
								</SimpleExpression>
							</Expression>
						</ConditionDetection>
					</MemberModules>
					<RegularDetections>
						<RegularDetection MonitorTypeStateID="RegKeyExists">
							<Node ID="CDExists">
								<Node ID="RegDS"/>
							</Node>
						</RegularDetection>
						<RegularDetection MonitorTypeStateID="RegKeyMissing">
							<Node ID="CDMissing">
								<Node ID="RegDS"/>
							</Node>
						</RegularDetection>
					</RegularDetections>
				</MonitorImplementation>
			</UnitMonitorType>
			<!-- Trellix.MonitorType.AgentVersion -->
			<UnitMonitorType ID="Trellix.MonitorType.AgentVersion" Accessibility="Internal">
				<MonitorTypeStates>
					<MonitorTypeState ID="RegValueMatch" NoDetection="false"/>
					<MonitorTypeState ID="RegValueDoesNotMatch" NoDetection="false"/>
				</MonitorTypeStates>
				<Configuration/>
				<MonitorImplementation>
					<MemberModules>
						<DataSource ID="RegDS" TypeID="Windows!Microsoft.Windows.RegistryProvider">
							<ComputerName>$Target/Host/Property[Type="Windows!Microsoft.Windows.Computer"]/PrincipalName$</ComputerName>
							<RegistryAttributeDefinitions>
								<RegistryAttributeDefinition>
									<AttributeName>AgentVersionExist</AttributeName>
									<Path>SOFTWARE\WOW6432Node\Network Associates\ePolicy Orchestrator\Application Plugins\EPOAGENT3000\Version</Path>
									<!-- For testing.
									<Path>SOFTWARE\WOW6432Node\Network Associates\ePolicy Orchestrator\Version</Path>
									-->
									<PathType>1</PathType>
									<AttributeType>0</AttributeType>
								</RegistryAttributeDefinition>
								<RegistryAttributeDefinition>
									<AttributeName>AgentVersion</AttributeName>
									<Path>SOFTWARE\WOW6432Node\Network Associates\ePolicy Orchestrator\Application Plugins\EPOAGENT3000\Version</Path>
									<!-- For testing.
									<Path>SOFTWARE\WOW6432Node\Network Associates\ePolicy Orchestrator\Version</Path>
									-->
									<PathType>1</PathType>
									<AttributeType>1</AttributeType>
								</RegistryAttributeDefinition>
							</RegistryAttributeDefinitions>
							<!-- 12 hours. -->
							<Frequency>43200</Frequency>
						</DataSource>
						<ConditionDetection ID="CDGood" TypeID="System!System.ExpressionFilter">
							<Expression>
								<SimpleExpression>
									<ValueExpression>
										<XPathQuery Type="String">Values/AgentVersion</XPathQuery>
									</ValueExpression>
									<Operator>Equal</Operator>
									<ValueExpression>
										<Value Type="String">5.7.9.139</Value>
									</ValueExpression>
								</SimpleExpression>
							</Expression>
						</ConditionDetection>
						<ConditionDetection ID="CDBad" TypeID="System!System.ExpressionFilter">
							<Expression>
								<!-- Need 'And' expression here otherwise it considers it unhealthy if the key isn't there and will alert. It will also alert if the value exists but the value data is blank. -->
								<And>
									<Expression>
										<SimpleExpression>
											<ValueExpression>
												<XPathQuery Type="String">Values/AgentVersion</XPathQuery>
											</ValueExpression>
											<Operator>NotEqual</Operator>
											<ValueExpression>
												<Value Type="String">5.7.9.139</Value>
											</ValueExpression>
										</SimpleExpression>
									</Expression>
									<Expression>
										<SimpleExpression>
											<ValueExpression>
												<XPathQuery Type="String">Values/AgentVersionExist</XPathQuery>
											</ValueExpression>
											<Operator>Equal</Operator>
											<ValueExpression>
												<Value Type="String">true</Value>
											</ValueExpression>
										</SimpleExpression>
									</Expression>
								</And>
							</Expression>
						</ConditionDetection>
					</MemberModules>
					<RegularDetections>
						<RegularDetection MonitorTypeStateID="RegValueMatch">
							<Node ID="CDGood">
								<Node ID="RegDS"/>
							</Node>
						</RegularDetection>
						<RegularDetection MonitorTypeStateID="RegValueDoesNotMatch">
							<Node ID="CDBad">
								<Node ID="RegDS"/>
							</Node>
						</RegularDetection>
					</RegularDetections>
				</MonitorImplementation>
			</UnitMonitorType>
			<!-- next one -->
			<UnitMonitorType ID="Trellix.MonitorType.ServiceState" Accessibility="Internal">
				<MonitorTypeStates>
					<MonitorTypeState ID="Running" NoDetection="false"/>
					<MonitorTypeState ID="NotRunning" NoDetection="false"/>
				</MonitorTypeStates>
				<Configuration>
					<xsd:element name="ComputerName" type="xsd:string" xmlns:xsd="http://www.w3.org/2001/XMLSchema"/>
					<xsd:element name="ServiceName" type="xsd:string" xmlns:xsd="http://www.w3.org/2001/XMLSchema"/>
					<xsd:element name="IntervalSeconds" type="xsd:integer" xmlns:xsd="http://www.w3.org/2001/XMLSchema"/>
					<xsd:element name="Samples" type="xsd:integer" xmlns:xsd="http://www.w3.org/2001/XMLSchema"/>
				</Configuration>
				<OverrideableParameters>
					<OverrideableParameter ID="IntervalSeconds" Selector="$Config/IntervalSeconds$" ParameterType="int"/>
					<OverrideableParameter ID="Samples" Selector="$Config/Samples$" ParameterType="int"/>
				</OverrideableParameters>
				<MonitorImplementation>
					<MemberModules>
						<DataSource ID="DS" TypeID="Windows!Microsoft.Windows.Win32ServiceInformationProvider">
							<ComputerName>$Config/ComputerName$</ComputerName>
							<ServiceName>$Config/ServiceName$</ServiceName>
							<Frequency>$Config/IntervalSeconds$</Frequency>
							<DisableCaching>true</DisableCaching>
							<CheckStartupType>true</CheckStartupType>
						</DataSource>
						<ProbeAction ID="Probe" TypeID="Windows!Microsoft.Windows.Win32ServiceInformationProbe">
							<ComputerName>$Config/ComputerName$</ComputerName>
							<ServiceName>$Config/ServiceName$</ServiceName>
						</ProbeAction>
						<ConditionDetection ID="ServiceRunning" TypeID="System!System.ExpressionFilter">
							<Expression>
								<And>
									<Expression>
										<SimpleExpression>
											<ValueExpression>
												<XPathQuery Type="Integer">Property[@Name='StartMode']</XPathQuery>
											</ValueExpression>
											<Operator>Equal</Operator>
											<ValueExpression>
												<!-- 0=BootStart 1=SystemStart 2=Automatic 3=Manual 4=Disabled -->
												<Value Type="Integer">2</Value>
											</ValueExpression>
										</SimpleExpression>
									</Expression>
									<Expression>
										<SimpleExpression>
											<ValueExpression>
												<XPathQuery Type="Integer">Property[@Name='State']</XPathQuery>
											</ValueExpression>
											<Operator>Equal</Operator>
											<ValueExpression>
												<!-- 0=Unknown 1=Stopped 2=StartPending 3=StopPending 4=Running 5=ContinuePending 6=PausePending 7=Paused 8=ServiceNotFound 9=ServerNotFound -->
												<Value Type="Integer">4</Value>
											</ValueExpression>
										</SimpleExpression>
									</Expression>
								</And>
							</Expression>
						</ConditionDetection>
						<ConditionDetection ID="ServiceNotRunning" TypeID="System!System.ExpressionFilter">
							<Expression>
								<And>
									<Expression>
										<SimpleExpression>
											<ValueExpression>
												<XPathQuery Type="Integer">Property[@Name='StartMode']</XPathQuery>
											</ValueExpression>
											<Operator>Equal</Operator>
											<ValueExpression>
												<!-- 0=BootStart 1=SystemStart 2=Automatic 3=Manual 4=Disabled -->
												<Value Type="Integer">2</Value>
											</ValueExpression>
										</SimpleExpression>
									</Expression>
									<Expression>
										<SimpleExpression>
											<ValueExpression>
												<XPathQuery Type="Integer">Property[@Name='State']</XPathQuery>
											</ValueExpression>
											<Operator>NotEqual</Operator>
											<ValueExpression>
												<!-- 0=Unknown 1=Stopped 2=StartPending 3=StopPending 4=Running 5=ContinuePending 6=PausePending 7=Paused 8=ServiceNotFound 9=ServerNotFound -->
												<Value Type="Integer">4</Value>
											</ValueExpression>
										</SimpleExpression>
									</Expression>
								</And>
							</Expression>
							<SuppressionSettings>
								<MatchCount>$Config/Samples$</MatchCount>
							</SuppressionSettings>
						</ConditionDetection>
					</MemberModules>
					<RegularDetections>
						<RegularDetection MonitorTypeStateID="Running">
							<Node ID="ServiceRunning">
								<Node ID="DS"/>
							</Node>
						</RegularDetection>
						<RegularDetection MonitorTypeStateID="NotRunning">
							<Node ID="ServiceNotRunning">
								<Node ID="DS"/>
							</Node>
						</RegularDetection>
					</RegularDetections>
					<OnDemandDetections>
						<OnDemandDetection MonitorTypeStateID="Running">
							<Node ID="ServiceRunning">
								<Node ID="Probe"/>
							</Node>
						</OnDemandDetection>
						<OnDemandDetection MonitorTypeStateID="NotRunning">
							<Node ID="ServiceNotRunning">
								<Node ID="Probe"/>
							</Node>
						</OnDemandDetection>
					</OnDemandDetections>
				</MonitorImplementation>
			</UnitMonitorType>
		</MonitorTypes>
	</TypeDefinitions>
	<Monitoring>
		<Discoveries>
			<!-- ePolicyOrchestrator -->
			<Discovery ID="Trellix.Discovery.ePolicyOrchestratorRegistry" Enabled="true" Target="SystemCenter!Microsoft.SystemCenter.HealthService" ConfirmDelivery="false" Remotable="true" Priority="Normal">
				<Category>Discovery</Category>
				<DiscoveryTypes>
					<DiscoveryClass TypeID="Trellix.Class.ePolicyOrchestrator"/>
				</DiscoveryTypes>
				<DataSource ID="DS" TypeID="Windows!Microsoft.Windows.FilteredRegistryDiscoveryProvider">
					<ComputerName>$Target/Host/Property[Type="Windows!Microsoft.Windows.Computer"]/PrincipalName$</ComputerName>
					<RegistryAttributeDefinitions>
						<RegistryAttributeDefinition>
							<AttributeName>ePolicyOrchestratorInstalled</AttributeName>
							<Path>SOFTWARE\Wow6432Node\Network Associates\ePolicy Orchestrator\InstallFolder</Path>
							<PathType>1</PathType>
							<AttributeType>1</AttributeType>
						</RegistryAttributeDefinition>
					</RegistryAttributeDefinitions>
					<!-- 24 hours. -->
					<Frequency>86400</Frequency>
					<ClassId>$MPElement[Name="Trellix.Class.ePolicyOrchestrator"]$</ClassId>
					<InstanceSettings>
						<Settings>
							<Setting>
								<Name>$MPElement[Name="Windows!Microsoft.Windows.Computer"]/PrincipalName$</Name>
								<Value>$Target/Host/Property[Type="Windows!Microsoft.Windows.Computer"]/PrincipalName$</Value>
							</Setting>
							<Setting>
								<Name>$MPElement[Name="Trellix.Class.ePolicyOrchestrator"]/InstallFolder$</Name>
								<Value>$Data/Values/ePolicyOrchestratorInstalled$</Value>
							</Setting>
							<Setting>
								<Name>$MPElement[Name="System!System.Entity"]/DisplayName$</Name>
								<Value>$Target/Host/Property[Type="System!System.Entity"]/DisplayName$</Value>
							</Setting>
						</Settings>
					</InstanceSettings>
					<Expression>
						<RegExExpression>
							<ValueExpression>
								<XPathQuery Type="String">Values/ePolicyOrchestratorInstalled</XPathQuery>
							</ValueExpression>
							<Operator>MatchesRegularExpression</Operator>
							<Pattern>epolic</Pattern>
						</RegExExpression>
					</Expression>
				</DataSource>
			</Discovery>
			<!-- AgentHandler -->
			<Discovery ID="Trellix.Discovery.AgentHandlerRegistry" Enabled="true" Target="SystemCenter!Microsoft.SystemCenter.HealthService" ConfirmDelivery="false" Remotable="true" Priority="Normal">
				<Category>Discovery</Category>
				<DiscoveryTypes>
					<DiscoveryClass TypeID="Trellix.Class.AgentHandler"/>
				</DiscoveryTypes>
				<DataSource ID="DS" TypeID="Windows!Microsoft.Windows.FilteredRegistryDiscoveryProvider">
					<ComputerName>$Target/Host/Property[Type="Windows!Microsoft.Windows.Computer"]/PrincipalName$</ComputerName>
					<RegistryAttributeDefinitions>
						<RegistryAttributeDefinition>
							<AttributeName>AgentHandlerInstalled</AttributeName>
							<Path>SOFTWARE\Wow6432Node\Network Associates\ePolicy Orchestrator\InstallFolder</Path>
							<PathType>1</PathType>
							<AttributeType>1</AttributeType>
						</RegistryAttributeDefinition>
					</RegistryAttributeDefinitions>
					<!-- 24 hours. -->
					<Frequency>86400</Frequency>
					<ClassId>$MPElement[Name="Trellix.Class.AgentHandler"]$</ClassId>
					<InstanceSettings>
						<Settings>
							<Setting>
								<Name>$MPElement[Name="Windows!Microsoft.Windows.Computer"]/PrincipalName$</Name>
								<Value>$Target/Host/Property[Type="Windows!Microsoft.Windows.Computer"]/PrincipalName$</Value>
							</Setting>
							<Setting>
								<Name>$MPElement[Name="Trellix.Class.AgentHandler"]/InstallFolder$</Name>
								<Value>$Data/Values/AgentHandlerInstalled$</Value>
							</Setting>
							<Setting>
								<Name>$MPElement[Name="System!System.Entity"]/DisplayName$</Name>
								<Value>$Target/Host/Property[Type="System!System.Entity"]/DisplayName$</Value>
							</Setting>
						</Settings>
					</InstanceSettings>
					<Expression>
						<RegExExpression>
							<ValueExpression>
								<XPathQuery Type="String">Values/AgentHandlerInstalled</XPathQuery>
							</ValueExpression>
							<Operator>MatchesRegularExpression</Operator>
							<Pattern>Agent Handler</Pattern>
						</RegExExpression>
					</Expression>
				</DataSource>
			</Discovery>
			<!-- Agent-->
			<Discovery ID="Trellix.Discovery.AgentRegistry" Enabled="true" Target="SystemCenter!Microsoft.SystemCenter.HealthService" ConfirmDelivery="false" Remotable="true" Priority="Normal">
				<Category>Discovery</Category>
				<DiscoveryTypes>
					<DiscoveryClass TypeID="Trellix.Class.Agent"/>
				</DiscoveryTypes>
				<DataSource ID="DS" TypeID="Windows!Microsoft.Windows.FilteredRegistryDiscoveryProvider">
					<ComputerName>$Target/Host/Property[Type="Windows!Microsoft.Windows.Computer"]/PrincipalName$</ComputerName>
					<RegistryAttributeDefinitions>
						<RegistryAttributeDefinition>
							<AttributeName>AgentInstalled</AttributeName>
							<Path>SOFTWARE\WOW6432Node\Network Associates\ePolicy Orchestrator\Agent</Path>
							<PathType>0</PathType>
							<AttributeType>0</AttributeType>
						</RegistryAttributeDefinition>
						<RegistryAttributeDefinition>
							<AttributeName>Version</AttributeName>
							<Path>SOFTWARE\WOW6432Node\Network Associates\ePolicy Orchestrator\Application Plugins\EPOAGENT3000\Version</Path>
							<PathType>1</PathType>
							<AttributeType>1</AttributeType>
						</RegistryAttributeDefinition>
						<RegistryAttributeDefinition>
							<AttributeName>InstalledPath</AttributeName>
							<Path>SOFTWARE\WOW6432Node\Network Associates\ePolicy Orchestrator\Agent\Installed Path</Path>
							<PathType>1</PathType>
							<AttributeType>1</AttributeType>
						</RegistryAttributeDefinition>
					</RegistryAttributeDefinitions>
					<!-- 24 hours. -->
					<Frequency>86400</Frequency>
					<ClassId>$MPElement[Name="Trellix.Class.Agent"]$</ClassId>
					<InstanceSettings>
						<Settings>
							<Setting>
								<Name>$MPElement[Name="Windows!Microsoft.Windows.Computer"]/PrincipalName$</Name>
								<Value>$Target/Host/Property[Type="Windows!Microsoft.Windows.Computer"]/PrincipalName$</Value>
							</Setting>
							<Setting>
								<Name>$MPElement[Name="Trellix.Class.Agent"]/Version$</Name>
								<Value>$Data/Values/Version$</Value>
							</Setting>
							<Setting>
								<Name>$MPElement[Name="Trellix.Class.Agent"]/InstallFolder$</Name>
								<Value>$Data/Values/InstalledPath$</Value>
							</Setting>
							<Setting>
								<Name>$MPElement[Name="System!System.Entity"]/DisplayName$</Name>
								<Value>$Target/Host/Property[Type="Windows!Microsoft.Windows.Computer"]/PrincipalName$</Value>
							</Setting>
						</Settings>
					</InstanceSettings>
					<Expression>
						<Or>
							<Expression>
								<SimpleExpression>
									<ValueExpression>
										<XPathQuery Type="String">Values/AgentInstalled</XPathQuery>
									</ValueExpression>
									<Operator>Equal</Operator>
									<ValueExpression>
										<Value Type="String">True</Value>
									</ValueExpression>
								</SimpleExpression>
							</Expression>
							<Expression>
								<SimpleExpression>
									<ValueExpression>
										<XPathQuery Type="String">Values/AgentInstalled</XPathQuery>
									</ValueExpression>
									<Operator>Equal</Operator>
									<ValueExpression>
										<Value Type="String">False</Value>
									</ValueExpression>
								</SimpleExpression>
							</Expression>
						</Or>
					</Expression>
				</DataSource>
			</Discovery>
			<!-- Service discovery -->
			<Discovery ID="Trellix.Discovery.Service" Enabled="true" Target="SystemCenter!Microsoft.SystemCenter.HealthService" ConfirmDelivery="false" Remotable="true" Priority="Normal">
				<Category>Discovery</Category>
				<DiscoveryTypes>
					<DiscoveryClass TypeID="Trellix.Class.Service">
						<Property PropertyID="ServiceName"/>
						<Property PropertyID="ServiceDisplayName"/>
						<Property PropertyID="StartMode"/>
					</DiscoveryClass>
				</DiscoveryTypes>
				<DataSource ID="DS" TypeID="Windows!Microsoft.Windows.WmiProviderWithClassSnapshotDataMapper">
					<NameSpace>root\cimv2</NameSpace>
					<Query>SELECT * FROM Win32_Service WHERE (displayname like '%mcafee%' or displayname like '%trellix%') and startmode='auto'</Query>
					<!-- 24 hours. -->
					<Frequency>86400</Frequency>
					<ClassId>$MPElement[Name="Trellix.Class.Service"]$</ClassId>
					<InstanceSettings>
						<Settings>
							<Setting>
								<Name>$MPElement[Name="Windows!Microsoft.Windows.Computer"]/PrincipalName$</Name>
								<Value>$Target/Host/Property[Type="Windows!Microsoft.Windows.Computer"]/PrincipalName$</Value>
							</Setting>
							<Setting>
								<Name>$MPElement[Name="System!System.Entity"]/DisplayName$</Name>
								<Value>$Target/Host/Property[Type="Windows!Microsoft.Windows.Computer"]/PrincipalName$</Value>
							</Setting>
							<Setting>
								<Name>$MPElement[Name="Trellix.Class.Service"]/ServiceName$</Name>
								<Value>$Data/Property[@Name='Name']$</Value>
							</Setting>
							<Setting>
								<Name>$MPElement[Name="Trellix.Class.Service"]/ServiceDisplayName$</Name>
								<Value>$Data/Property[@Name='DisplayName']$</Value>
							</Setting>
							<Setting>
								<Name>$MPElement[Name="Trellix.Class.Service"]/StartMode$</Name>
								<Value>$Data/Property[@Name='StartMode']$</Value>
							</Setting>
							<!-- If you have additional class properties you want to provide values from WMI add them here as additional instance settings. -->
						</Settings>
					</InstanceSettings>
				</DataSource>
			</Discovery>
		</Discoveries>
		<Monitors>
			<UnitMonitor ID="Trellix.Monitor.AgentInstall" Accessibility="Public" Enabled="true" Target="Trellix.Class.Agent" ParentMonitorID="Health!System.Health.ConfigurationState" Remotable="true" Priority="Normal" TypeID="Trellix.MonitorType.AgentInstall" ConfirmDelivery="true">
				<Category>Alert</Category>
				<AlertSettings AlertMessage="Trellix.Monitor.AgentInstall.AlertMessage">
					<AlertOnState>Error</AlertOnState>
					<AutoResolve>true</AutoResolve>
					<AlertPriority>High</AlertPriority>
					<AlertSeverity>MatchMonitorHealth</AlertSeverity>
					<AlertParameters>
						<AlertParameter1>$Target/Host/Property[Type="Windows!Microsoft.Windows.Computer"]/PrincipalName$</AlertParameter1>
					</AlertParameters>
				</AlertSettings>
				<OperationalStates>
					<OperationalState ID="Success" MonitorTypeStateID="RegKeyExists" HealthState="Success"/>
					<OperationalState ID="Error" MonitorTypeStateID="RegKeyMissing" HealthState="Error"/>
				</OperationalStates>
				<Configuration/>
			</UnitMonitor>
			<UnitMonitor ID="Trellix.Monitor.AgentVersion" Accessibility="Public" Enabled="true" Target="Trellix.Class.Agent" ParentMonitorID="Health!System.Health.ConfigurationState" Remotable="true" Priority="Normal" TypeID="Trellix.MonitorType.AgentVersion" ConfirmDelivery="true">
				<Category>Alert</Category>
				<AlertSettings AlertMessage="Trellix.Monitor.AgentVersion.AlertMessage">
					<AlertOnState>Warning</AlertOnState>
					<AutoResolve>true</AutoResolve>
					<AlertPriority>Normal</AlertPriority>
					<AlertSeverity>MatchMonitorHealth</AlertSeverity>
					<AlertParameters>
						<AlertParameter1>$Target/Host/Property[Type="Windows!Microsoft.Windows.Computer"]/PrincipalName$</AlertParameter1>
						<!-- This is a cheat to show the agent version in the alert. I can't find a better way to do it. -->
						<AlertParameter2>$Target/Property[Type="Trellix.Class.Agent"]/Version$</AlertParameter2>
					</AlertParameters>
				</AlertSettings>
				<OperationalStates>
					<OperationalState ID="Success" MonitorTypeStateID="RegValueMatch" HealthState="Success"/>
					<OperationalState ID="Warning" MonitorTypeStateID="RegValueDoesNotMatch" HealthState="Warning"/>
				</OperationalStates>
				<Configuration/>
			</UnitMonitor>
			<UnitMonitor ID="Trellix.Monitor.ServiceHealth" Accessibility="Public" Enabled="true" Target="Trellix.Class.Service" ParentMonitorID="Health!System.Health.AvailabilityState" Remotable="true" Priority="Normal" TypeID="Trellix.MonitorType.ServiceState" ConfirmDelivery="false">
				<Category>Alert</Category>
				<AlertSettings AlertMessage="Trellix.Monitor.ServiceHealth.AlertMessage">
					<AlertOnState>Error</AlertOnState>
					<AutoResolve>true</AutoResolve>
					<AlertPriority>Normal</AlertPriority>
					<AlertSeverity>Error</AlertSeverity>
					<AlertParameters>
						<AlertParameter1>$Data/Context/Property[@Name='Name']$</AlertParameter1>
						<AlertParameter2>$Data/Context/Property[@Name='DisplayName']$</AlertParameter2>
						<AlertParameter3>$Target/Host/Property[Type="Windows!Microsoft.Windows.Computer"]/PrincipalName$</AlertParameter3>
					</AlertParameters>
				</AlertSettings>
				<OperationalStates>
					<OperationalState ID="Running" MonitorTypeStateID="Running" HealthState="Success"/>
					<OperationalState ID="NotRunning" MonitorTypeStateID="NotRunning" HealthState="Error"/>
				</OperationalStates>
				<Configuration>
					<ComputerName/>
					<ServiceName>$Target/Property[Type="Trellix.Class.Service"]/ServiceName$</ServiceName>
					<IntervalSeconds>120</IntervalSeconds>
					<Samples>1</Samples>
				</Configuration>
			</UnitMonitor>
		</Monitors>
		<Recoveries>
			<!-- Disabled for testing -->
			<Recovery ID="Trellix.Recovery.StartWindowsService" Accessibility="Public" Enabled="true" Target="Trellix.Class.Service" Monitor="Trellix.Monitor.ServiceHealth" ResetMonitor="true" ExecuteOnState="Error" Remotable="true" Timeout="300">
				<Category>Maintenance</Category>
				<WriteAction ID="WA" TypeID="System!System.CommandExecuter">
					<ApplicationName>%windir%\System32\net.exe</ApplicationName>
					<WorkingDirectory/>
					<CommandLine>start $Target/Property[Type="Trellix.Class.Service"]/ServiceName$</CommandLine>
					<TimeoutSeconds>60</TimeoutSeconds>
					<RequireOutput>true</RequireOutput>
				</WriteAction>
			</Recovery>
		</Recoveries>
	</Monitoring>
	<Presentation>
		<StringResources>
			<StringResource ID="Trellix.Monitor.AgentInstall.AlertMessage"/>
			<StringResource ID="Trellix.Monitor.AgentVersion.AlertMessage"/>
			<StringResource ID="Trellix.Monitor.ServiceHealth.AlertMessage"/>
		</StringResources>
	</Presentation>
	<LanguagePacks>
		<LanguagePack ID="ENU" IsDefault="false">
			<DisplayStrings>
				<DisplayString ElementID="Trellix.Monitoring">
					<Name>Trellix Monitoring</Name>
					<Description>Custom monitoring for Trellix.</Description>
				</DisplayString>
				<!-- Classes -->
				<DisplayString ElementID="Trellix.Class.ePolicyOrchestrator">
					<Name>Trellix ePolicy Orchestrator</Name>
				</DisplayString>
				<DisplayString ElementID="Trellix.Class.ePolicyOrchestrator" SubElementID="InstallFolder">
					<Name>Install Folder</Name>
				</DisplayString>
				<DisplayString ElementID="Trellix.Class.AgentHandler">
					<Name>Trellix Agent Handler</Name>
				</DisplayString>
				<DisplayString ElementID="Trellix.Class.AgentHandler" SubElementID="InstallFolder">
					<Name>Install Folder</Name>
				</DisplayString>
				<DisplayString ElementID="Trellix.Class.Agent">
					<Name>Trellix Agent</Name>
				</DisplayString>
				<DisplayString ElementID="Trellix.Class.Agent" SubElementID="Version">
					<Name>Version</Name>
				</DisplayString>
				<DisplayString ElementID="Trellix.Class.Agent" SubElementID="InstallFolder">
					<Name>Install Folder</Name>
				</DisplayString>
				<DisplayString ElementID="Trellix.Class.Service">
					<Name>Trellix Service</Name>
				</DisplayString>
				<DisplayString ElementID="Trellix.Class.Service" SubElementID="ServiceName">
					<Name>Service Name</Name>
				</DisplayString>
				<DisplayString ElementID="Trellix.Class.Service" SubElementID="ServiceDisplayName">
					<Name>Service Display Name</Name>
				</DisplayString>
				<DisplayString ElementID="Trellix.Class.Service" SubElementID="StartMode">
					<Name>Start Mode</Name>
				</DisplayString>
				<!-- Discoveries -->
				<DisplayString ElementID="Trellix.Discovery.ePolicyOrchestratorRegistry">
					<Name>Trellix Discovery ePolicyOrchestrator Registry Discovery</Name>
				</DisplayString>
				<DisplayString ElementID="Trellix.Discovery.AgentHandlerRegistry">
					<Name>Trellix Discovery AgentHandler Registry Discovery</Name>
				</DisplayString>
				<DisplayString ElementID="Trellix.Discovery.AgentRegistry">
					<Name>Trellix Discovery Agent Registry Discovery</Name>
				</DisplayString>
				<DisplayString ElementID="Trellix.Discovery.Service">
					<Name>Trellix Discovery Service Discovery</Name>
				</DisplayString>
				<!-- Monitor types -->
				<DisplayString ElementID="Trellix.MonitorType.AgentInstall">
					<Name>Trellix Monitor Type Agent Install</Name>
				</DisplayString>
				<DisplayString ElementID="Trellix.MonitorType.AgentVersion">
					<Name>Trellix Monitor Type Agent Version</Name>
				</DisplayString>
				<DisplayString ElementID="Trellix.MonitorType.ServiceState">
					<Name>Trellix Monitor Type Service State</Name>
				</DisplayString>
				<!-- Monitors -->
				<DisplayString ElementID="Trellix.Monitor.AgentInstall">
					<Name>Trellix Agent Install</Name>
					<Description/>
				</DisplayString>
				<DisplayString ElementID="Trellix.Monitor.AgentInstall" SubElementID="Success">
					<Name>RegKeyExists</Name>
				</DisplayString>
				<DisplayString ElementID="Trellix.Monitor.AgentInstall" SubElementID="Error">
					<Name>RegKeyMissing</Name>
				</DisplayString>
				<DisplayString ElementID="Trellix.Monitor.AgentInstall.AlertMessage">
					<Name>Trellix Agent Not Installed</Name>
					<Description>The Trellix agent is not installed on {0}.
					
						See the knowledge section below for more information.</Description>
				</DisplayString>
				<DisplayString ElementID="Trellix.Monitor.AgentVersion">
					<Name>Trellix Agent Version</Name>
					<Description/>
				</DisplayString>
				<DisplayString ElementID="Trellix.Monitor.AgentVersion" SubElementID="Success">
					<Name>RegValueMatch</Name>
				</DisplayString>
				<DisplayString ElementID="Trellix.Monitor.AgentVersion" SubElementID="Warning">
					<Name>RegValueDoesNotMatch</Name>
				</DisplayString>
				<DisplayString ElementID="Trellix.Monitor.AgentVersion.AlertMessage">
					<Name>Trellix Agent Update Required</Name>
					<Description>The Trellix agent on {0} needs to be upgraded to version 5.7.9.139. The installed version is {1}.
					
						See the knowledge section below for more information.</Description>
				</DisplayString>
				<DisplayString ElementID="Trellix.Monitor.ServiceHealth">
					<Name>Trellix Service Health</Name>
				</DisplayString>
				<DisplayString ElementID="Trellix.Monitor.ServiceHealth" SubElementID="Running">
					<Name>Running</Name>
				</DisplayString>
				<DisplayString ElementID="Trellix.Monitor.ServiceHealth" SubElementID="NotRunning">
					<Name>Not Running</Name>
				</DisplayString>
				<DisplayString ElementID="Trellix.Monitor.ServiceHealth.AlertMessage">
					<Name>Trellix Service Not Running</Name>
					<Description>The '{1}' service on {2} is not running.
					
						See the knowledge section below for more information.</Description>
				</DisplayString>
				<!-- Recoveries -->
				<DisplayString ElementID="Trellix.Recovery.StartWindowsService">
					<Name>Trellix Start Windows Service Recovery</Name>
				</DisplayString>
			</DisplayStrings>
			<KnowledgeArticles>
				<KnowledgeArticle ElementID="Trellix.Monitor.AgentInstall" Visible="true">
					<MamlContent>
						<maml:section xmlns:maml="http://schemas.microsoft.com/maml/2004/10">
							<maml:title>Summary</maml:title>
							<maml:para>This monitor checks if the Trellix agent is installed.</maml:para>
						</maml:section>
						<maml:section xmlns:maml="http://schemas.microsoft.com/maml/2004/10">
							<maml:title>Causes</maml:title>
							<maml:para>If the below registry value is not found, it's assumed the agent is not installed and an alert is generated.</maml:para>
							<maml:list>
								<maml:listItem>
									<maml:para>HKLM\SOFTWARE\WOW6432Node\Network Associates\ePolicy Orchestrator\Application Plugins\EPOAGENT3000\Version</maml:para>
								</maml:listItem>
							</maml:list>
						</maml:section>
						<maml:section xmlns:maml="http://schemas.microsoft.com/maml/2004/10">
							<maml:title>Resolutions</maml:title>
							<maml:para>Install the agent and the alert will automatically close.</maml:para>
						</maml:section>
					</MamlContent>
				</KnowledgeArticle>
				<KnowledgeArticle ElementID="Trellix.Monitor.AgentVersion" Visible="true">
					<MamlContent>
						<maml:section xmlns:maml="http://schemas.microsoft.com/maml/2004/10">
							<maml:title>Summary</maml:title>
							<maml:para>This monitor checks the version of the Trellix agent.</maml:para>
						</maml:section>
						<maml:section xmlns:maml="http://schemas.microsoft.com/maml/2004/10">
							<maml:title>Causes</maml:title>
							<maml:para>If the agent is not version 5.7.9.139 an alert is generated.</maml:para>
						</maml:section>
						<maml:section xmlns:maml="http://schemas.microsoft.com/maml/2004/10">
							<maml:title>Resolutions</maml:title>
							<maml:para>Upgrade the agent and the alert will automatically close.</maml:para>
						</maml:section>
					</MamlContent>
				</KnowledgeArticle>
				<KnowledgeArticle ElementID="Trellix.Monitor.ServiceHealth" Visible="true">
					<MamlContent>
						<maml:section xmlns:maml="http://schemas.microsoft.com/maml/2004/10">
							<maml:title>Summary</maml:title>
							<maml:para>This monitor checks the status of Trellix and McAfee services.</maml:para>
						</maml:section>
						<maml:section xmlns:maml="http://schemas.microsoft.com/maml/2004/10">
							<maml:title>Causes</maml:title>
							<maml:para>If a service with automatic start type is not running an alert is generated.</maml:para>
						</maml:section>
						<maml:section xmlns:maml="http://schemas.microsoft.com/maml/2004/10">
							<maml:title>Resolutions</maml:title>
							<maml:para>The monitor has a recovery task that will automatically try and start the service. If the service starts the alert will close, otherwise further investigation is required.</maml:para>
						</maml:section>
					</MamlContent>
				</KnowledgeArticle>
			</KnowledgeArticles>
		</LanguagePack>
	</LanguagePacks>
</ManagementPack>
