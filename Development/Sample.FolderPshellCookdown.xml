<!--
Last Update: 18/05/2015
Description: Monitors the count of files in sub-folders. If it's over the threshold it alerts. 
Requirements: To test this MP designate a server as the monitor server. On this server add the reg key 'SOFTWARE\Test\TopFolder' and add a string called 'TopFolderPath'. Now add any folder path that the server can get to like C:\temp as the string value. This will be the 'top folder'. A reg discovery then runs to discover all sub-folders. A composite module containing a powershell script monitors the file count in each folder that cooks down.
Notes: I added a rule to alert when the number of sub-folders is too big. This is so SCOM doesn't get hammered if somehow a heap of folders get copied/created by accident. There's also the standard 1706 discovery event if any array is empty. The discovery and monitor intervals are very low so delete this MP when you are done with it.
-->
<ManagementPack ContentReadable="true" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
	<Manifest>
		<Identity>
			<ID>Sample.FolderPshellCookdown</ID>
			<Version>1.0.0.0</Version>
		</Identity>
		<Name>Sample.FolderPshellCookdown</Name>
		<References>
			<Reference Alias="SC">
				<ID>Microsoft.SystemCenter.Library</ID>
				<Version>6.1.7043.0</Version>
				<PublicKeyToken>31bf3856ad364e35</PublicKeyToken>
			</Reference>
			<Reference Alias="Windows">
				<ID>Microsoft.Windows.Library</ID>
				<Version>6.1.7043.0</Version>
				<PublicKeyToken>31bf3856ad364e35</PublicKeyToken>
			</Reference>
			<Reference Alias="Health">
				<ID>System.Health.Library</ID>
				<Version>6.1.7043.0</Version>
				<PublicKeyToken>31bf3856ad364e35</PublicKeyToken>
			</Reference>
			<Reference Alias="System">
				<ID>System.Library</ID>
				<Version>6.1.7043.0</Version>
				<PublicKeyToken>31bf3856ad364e35</PublicKeyToken>
			</Reference>
		</References>
	</Manifest>
	<TypeDefinitions>
		<EntityTypes>
			<!--CLASSES-->
			<ClassTypes>
				<ClassType ID="Sample.FolderPshellCookdown.Class.MonitorServer" Accessibility="Public" Abstract="false" Base="Windows!Microsoft.Windows.LocalApplication" Hosted="true" Singleton="false">
					<Property ID="TopFolderPath" Type="string" Key="false" CaseSensitive="false" Length="256" MinLength="0" />
				</ClassType>
				<ClassType ID="Sample.FolderPshellCookdown.Class.SubFolder" Accessibility="Public" Abstract="false" Base="Windows!Microsoft.Windows.ApplicationComponent" Hosted="true" Singleton="false">
					<Property ID="SubFolderName" Type="string" Key="true" CaseSensitive="false" Length="256" MinLength="0" />
				</ClassType>
			</ClassTypes>
			<!--RELATIONSHIPS-->
			<RelationshipTypes>
				<RelationshipType ID="Sample.FolderPshellCookdown.Relationship.MonitorServerHostsSubFolder" Accessibility="Internal" Abstract="false" Base="System!System.Hosting">
					<Source>Sample.FolderPshellCookdown.Class.MonitorServer</Source>
					<Target>Sample.FolderPshellCookdown.Class.SubFolder</Target>
				</RelationshipType>
			</RelationshipTypes>
		</EntityTypes>
		<!--MODULE TYPES-->
		<ModuleTypes>
			<DataSourceModuleType ID="Sample.FolderPshellCookdown.DataSource.PowerShellFileCountPropertyBag" Accessibility="Public" Batching="false">
				<Configuration>
					<IncludeSchemaTypes>
						<SchemaType>Windows!Microsoft.Windows.PowerShellSchema</SchemaType>
					</IncludeSchemaTypes>
					<xsd:element minOccurs="1" name="IntervalSeconds" type="xsd:integer" />
					<xsd:element minOccurs="1" name="SyncTime" type="xsd:string" />
					<xsd:element minOccurs="1" name="TopFolder" type="xsd:string" />
					<xsd:element minOccurs="1" name="SubFolderName" type="xsd:string" />
				</Configuration>
				<OverrideableParameters>
					<OverrideableParameter ID="IntervalSeconds" Selector="$Config/IntervalSeconds$" ParameterType="int" />
					<OverrideableParameter ID="SyncTime" Selector="$Config/SyncTime$" ParameterType="string" />
				</OverrideableParameters>
				<ModuleImplementation Isolation="Any">
					<Composite>
						<MemberModules>
							<DataSource ID="Script" TypeID="Sample.FolderPshellCookdown.DataSource.PowerShellPropertyBagProbe">
								<IntervalSeconds>$Config/IntervalSeconds$</IntervalSeconds>
								<SyncTime>$Config/SyncTime$</SyncTime>
								<ScriptName>FileCount.ps1</ScriptName>
								<ScriptBody>
									<![CDATA[
#To test this monitor from the console:
#C:\temp\b.ps1 -topFolder C:\temp
param($topFolder)
$ErrorActionPreference = "SilentlyContinue"
$arrEmptyArray = 0
$arrMaxFiles = 100
$vEventName = "Monitor Name"
$vEventValue = "Sample.FolderPshellCookdown.Monitor.SubFolderFileCount`nScript Name : FileCount.ps1`nManagement Pack : Sample.FolderPshellCookdown`nStart Time: " + (get-date)
$vEventSeverity = 0
$api = New-Object -comObject 'MOM.ScriptAPI'
$error.clear()
$SubFolders = @(Get-ChildItem -Path $topFolder | where {$_.PSIsContainer -eq $True})
Function fLogEvent
	{
	$api.LogScriptEvent($vEventName, $vEventID, $vEventSeverity, $vEventValue + "`n" + $vEventOuput + "End Time: " + (get-date))
	}
	$SubFolders = Get-ChildItem -Path $topFolder | where {$_.PSIsContainer -eq $True} | sort
foreach ($SubFolder in $SubFolders)
	{
	$bag = $api.CreatePropertyBag() 
	$FileCount = (Get-ChildItem -Path "$topFolder\$SubFolder" -recurse | where-object {-not ($_.PSIsContainer)}).Count
		If ($FileCount -gt $arrMaxFiles)
		{
		$vEventID = 2613
		$vEventOuput = "$topFolder\$SubFolder has $FileCount total files. The maximum allowed is $arrMaxFiles. $error`n"
		$vEventSeverity = 2
		fLogEvent
		}
	$bag.AddValue("SubFolderName", $SubFolder) 
	$bag.AddValue("FileCount", $FileCount) 
	$api.AddItem($bag)
	#For testing returned data:
	#$api.Return($bag)
	$bag
	}
]]>
								</ScriptBody>
								<SnapIns />
								<Parameters>
									<Parameter>
										<Name>topFolder</Name>
										<Value>$Config/TopFolder$</Value>
									</Parameter>
								</Parameters>
								<TimeoutSeconds>60</TimeoutSeconds>
							</DataSource>
							<ConditionDetection ID="FilterFolderName" TypeID="System!System.ExpressionFilter">
								<Expression>
									<SimpleExpression>
										<ValueExpression>
											<XPathQuery Type="String">Property[@Name='SubFolderName']</XPathQuery>
										</ValueExpression>
										<Operator>Equal</Operator>
										<ValueExpression>
											<Value Type="String">$Config/SubFolderName$</Value>
										</ValueExpression>
									</SimpleExpression>
								</Expression>
							</ConditionDetection>
						</MemberModules>
						<Composition>
							<Node ID="FilterFolderName">
								<Node ID="Script" />
							</Node>
						</Composition>
					</Composite>
				</ModuleImplementation>
				<OutputType>System!System.PropertyBagData</OutputType>
			</DataSourceModuleType>
			<DataSourceModuleType ID="Sample.FolderPshellCookdown.DataSource.PowerShellPropertyBagProbe" Accessibility="Public" Batching="false">
				<Configuration>
					<IncludeSchemaTypes>
						<SchemaType>Windows!Microsoft.Windows.PowerShellSchema</SchemaType>
					</IncludeSchemaTypes>
					<xsd:element minOccurs="1" name="IntervalSeconds" type="xsd:integer" />
					<xsd:element minOccurs="1" name="SyncTime" type="xsd:string" />
					<xsd:element minOccurs="1" name="ScriptName" type="NonNullString" />
					<xsd:element minOccurs="1" name="ScriptBody" type="NonNullString" />
					<xsd:element minOccurs="1" name="SnapIns" type="SnapInsType" />
					<xsd:element minOccurs="1" name="Parameters" type="NamedParametersType" />
					<xsd:element minOccurs="1" name="TimeoutSeconds" type="xsd:integer" />
					<xsd:element minOccurs="0" maxOccurs="1" name="StrictErrorHandling" type="xsd:boolean" />
				</Configuration>
				<OverrideableParameters>
					<OverrideableParameter ID="IntervalSeconds" Selector="$Config/IntervalSeconds$" ParameterType="int" />
					<OverrideableParameter ID="SyncTime" Selector="$Config/SyncTime$" ParameterType="string" />
					<OverrideableParameter ID="TimeoutSeconds" Selector="$Config/TimeoutSeconds$" ParameterType="int" />
				</OverrideableParameters>
				<ModuleImplementation Isolation="Any">
					<Composite>
						<MemberModules>
							<DataSource ID="Scheduler" TypeID="System!System.SimpleScheduler">
								<IntervalSeconds>$Config/IntervalSeconds$</IntervalSeconds>
								<SyncTime>$Config/SyncTime$</SyncTime>
							</DataSource>
							<ProbeAction ID="Probe" TypeID="Windows!Microsoft.Windows.PowerShellPropertyBagProbe">
								<ScriptName>$Config/ScriptName$</ScriptName>
								<ScriptBody>$Config/ScriptBody$</ScriptBody>
								<SnapIns>$Config/SnapIns$</SnapIns>
								<Parameters>$Config/Parameters$</Parameters>
								<TimeoutSeconds>$Config/TimeoutSeconds$</TimeoutSeconds>
								<StrictErrorHandling>$Config/StrictErrorHandling$</StrictErrorHandling>
							</ProbeAction>
						</MemberModules>
						<Composition>
							<Node ID="Probe">
								<Node ID="Scheduler" />
							</Node>
						</Composition>
					</Composite>
				</ModuleImplementation>
				<OutputType>System!System.PropertyBagData</OutputType>
			</DataSourceModuleType>
		</ModuleTypes>
		<!--MONITOR TYPES-->
		<MonitorTypes>
			<UnitMonitorType ID="Sample.FolderPshellCookdown.MonitorType.PowerShellFileCountPropertyBag" Accessibility="Internal">
				<MonitorTypeStates>
					<MonitorTypeState ID="OverWarningThreshold" NoDetection="false" />
					<MonitorTypeState ID="UnderThreshold" NoDetection="false" />
				</MonitorTypeStates>
				<Configuration>
					<xsd:element minOccurs="1" name="IntervalSeconds" type="xsd:integer" />
					<xsd:element minOccurs="1" name="SyncTime" type="xsd:string" />
					<xsd:element minOccurs="1" name="TopFolder" type="xsd:string" />
					<xsd:element minOccurs="1" name="SubFolderName" type="xsd:string" />
					<xsd:element minOccurs="1" name="WarningThreshold" type="xsd:integer" />
				</Configuration>
				<OverrideableParameters>
					<OverrideableParameter ID="IntervalSeconds" Selector="$Config/IntervalSeconds$" ParameterType="int" />
					<OverrideableParameter ID="SyncTime" Selector="$Config/SyncTime$" ParameterType="string" />
					<OverrideableParameter ID="WarningThreshold" Selector="$Config/WarningThreshold$" ParameterType="int" />
				</OverrideableParameters>
				<MonitorImplementation>
					<MemberModules>
						<DataSource ID="DS" TypeID="Sample.FolderPshellCookdown.DataSource.PowerShellFileCountPropertyBag">
							<IntervalSeconds>$Config/IntervalSeconds$</IntervalSeconds>
							<SyncTime>$Config/SyncTime$</SyncTime>
							<TopFolder>$Config/TopFolder$</TopFolder>
							<SubFolderName>$Config/SubFolderName$</SubFolderName>
						</DataSource>
						<ConditionDetection ID="FilterUnderThreshold" TypeID="System!System.ExpressionFilter">
							<Expression>
								<SimpleExpression>
									<ValueExpression>
										<XPathQuery Type="Integer">Property[@Name='FileCount']</XPathQuery>
									</ValueExpression>
									<Operator>LessEqual</Operator>
									<ValueExpression>
										<Value Type="Integer">$Config/WarningThreshold$</Value>
									</ValueExpression>
								</SimpleExpression>
							</Expression>
						</ConditionDetection>
						<ConditionDetection ID="FilterOverWarningThreshold" TypeID="System!System.ExpressionFilter">
							<Expression>
								<SimpleExpression>
									<ValueExpression>
										<XPathQuery Type="Integer">Property[@Name='FileCount']</XPathQuery>
									</ValueExpression>
									<Operator>Greater</Operator>
									<ValueExpression>
										<Value Type="Integer">$Config/WarningThreshold$</Value>
									</ValueExpression>
								</SimpleExpression>
							</Expression>
						</ConditionDetection>
					</MemberModules>
					<RegularDetections>
						<RegularDetection MonitorTypeStateID="UnderThreshold">
							<Node ID="FilterUnderThreshold">
								<Node ID="DS" />
							</Node>
						</RegularDetection>
						<RegularDetection MonitorTypeStateID="OverWarningThreshold">
							<Node ID="FilterOverWarningThreshold">
								<Node ID="DS" />
							</Node>
						</RegularDetection>
					</RegularDetections>
				</MonitorImplementation>
			</UnitMonitorType>
		</MonitorTypes>
	</TypeDefinitions>
	<Monitoring>
		<!--DISCOVERIES-->
		<Discoveries>
			<Discovery ID="Sample.FolderPshellCookdown.Discovery.MonitorServer" Enabled="true" Target="Windows!Microsoft.Windows.Computer" ConfirmDelivery="false" Remotable="true" Priority="Normal">
				<Category>Discovery</Category>
				<DiscoveryTypes>
					<DiscoveryClass TypeID="Sample.FolderPshellCookdown.Class.MonitorServer" />
				</DiscoveryTypes>
				<DataSource ID="DS" TypeID="Windows!Microsoft.Windows.FilteredRegistryDiscoveryProvider">
					<ComputerName>$Target/Property[Type="Windows!Microsoft.Windows.Computer"]/PrincipalName$</ComputerName>
					<RegistryAttributeDefinitions>
						<RegistryAttributeDefinition>
							<AttributeName>AppExists</AttributeName>
							<Path>SOFTWARE\Test\TopFolder</Path>
							<PathType>0</PathType>
							<AttributeType>0</AttributeType>
						</RegistryAttributeDefinition>
						<RegistryAttributeDefinition>
							<AttributeName>TopFolderPath</AttributeName>
							<Path>SOFTWARE\Test\TopFolder\TopFolderPath</Path>
							<PathType>1</PathType>
							<AttributeType>1</AttributeType>
						</RegistryAttributeDefinition>
					</RegistryAttributeDefinitions>
					<Frequency>86400</Frequency>
					<ClassId>$MPElement[Name="Sample.FolderPshellCookdown.Class.MonitorServer"]$</ClassId>
					<InstanceSettings>
						<Settings>
							<Setting>
								<Name>$MPElement[Name="Windows!Microsoft.Windows.Computer"]/PrincipalName$</Name>
								<Value>$Target/Property[Type="Windows!Microsoft.Windows.Computer"]/PrincipalName$</Value>
							</Setting>
							<Setting>
								<Name>$MPElement[Name="Sample.FolderPshellCookdown.Class.MonitorServer"]/TopFolderPath$</Name>
								<Value>$Data/Values/TopFolderPath$</Value>
							</Setting>
							<Setting>
								<Name>$MPElement[Name="System!System.Entity"]/DisplayName$</Name>
								<Value>$Target/Property[Type="Windows!Microsoft.Windows.Computer"]/PrincipalName$</Value>
							</Setting>
						</Settings>
					</InstanceSettings>
					<Expression>
						<SimpleExpression>
							<ValueExpression>
								<XPathQuery Type="String">Values/AppExists</XPathQuery>
							</ValueExpression>
							<Operator>Equal</Operator>
							<ValueExpression>
								<Value Type="String">true</Value>
							</ValueExpression>
						</SimpleExpression>
					</Expression>
				</DataSource>
			</Discovery>
			<!--Find each sub-folder under the top folder-->
			<Discovery ID="Sample.FolderPshellCookdown.Discovery.SubFolder" Enabled="true" Target="Sample.FolderPshellCookdown.Class.MonitorServer" ConfirmDelivery="true" Remotable="true" Priority="Normal">
				<Category>Discovery</Category>
				<DiscoveryTypes>
					<DiscoveryClass TypeID="Sample.FolderPshellCookdown.Class.SubFolder" />
				</DiscoveryTypes>
				<DataSource ID="DS" TypeID="Windows!Microsoft.Windows.TimedPowerShell.DiscoveryProvider">
					<IntervalSeconds>60</IntervalSeconds>
					<SyncTime />
					<ScriptName>DiscoverSubFolders.ps1</ScriptName>
					<ScriptBody>
						<![CDATA[
#To test this discovery from the console:
#C:\temp\a.ps1 -sourceId "{00000000-0000-0000-0000-000000000000}" -managedEntityId "{00000000-0000-0000-0000-000000000000}" -topFolder c:\temp\ -computerName blah
param($sourceId,$managedEntityId,$topFolder,$computerName)
$ErrorActionPreference = "SilentlyContinue"
$arrEmptyArray = 0
$arrMaxFolders = 20
$vEventID = 1706
$vEventName = "Discovery Name"
$vEventValue = "Sample.FolderPshellCookdown.Discovery.SubFolder`nScript Name : DiscoverSubFolders.ps1`nManagement Pack : Sample.FolderPshellCookdown`nStart Time: " + (get-date)
$api = New-Object -comObject 'MOM.ScriptAPI'
$discoveryData = $api.CreateDiscoveryData(0, $sourceId, $managedEntityId)
$error.clear()
$SubFolders = @(Get-ChildItem -Path $topFolder | where {$_.PSIsContainer -eq $True})
Function fLogEvent
	{
	$api.logscriptevent($vEventName, $vEventID, $vEventSeverity, $vEventValue + "`n" + $vEventOuput + "End Time: " + (get-date))
	}
If ($SubFolders.count -eq $arrEmptyArray)
	{
	$vEventSeverity = 1
	$vEventOuput = "Error: SubFolders array is empty. $error`n"	
	fLogEvent
	Exit
	}
ElseIf ($SubFolders.count -gt $arrMaxFolders)
	{
	$vEventID = 2612
	$vEventSeverity = 2
	$vEventOuput = "Warning: Folder count threshold exceeded (" + $SubFolders.count + "). Maximum allowed is " + $arrMaxFolders + ". $error`n"	
	fLogEvent
	Exit
	}
Else
	{
	foreach ($SubFolder in $SubFolders)
		{
		$instance = $discoveryData.CreateClassInstance("$MPElement[Name='Sample.FolderPshellCookdown.Class.SubFolder']$")
		$instance.AddProperty("$MPElement[Name='Windows!Microsoft.Windows.Computer']/PrincipalName$", $computerName)
		$instance.AddProperty("$MPElement[Name='Sample.FolderPshellCookdown.Class.SubFolder']/SubFolderName$", $SubFolder.name)
		$discoveryData.AddInstance($instance)
		#For testing returned data:
		#$api.return($discoveryData)
		}
	$vEventSeverity = 0
	$vEventOuput += "User Folder Array: " + $SubFolders.count + " items`n"
	$discoveryData
	}
fLogEvent
]]>
					</ScriptBody>
					<Parameters>
						<Parameter>
							<Name>sourceID</Name>
							<Value>$MPElement$</Value>
						</Parameter>
						<Parameter>
							<Name>managedEntityID</Name>
							<Value>$Target/Id$</Value>
						</Parameter>
						<Parameter>
							<Name>topFolder</Name>
							<Value>$Target/Property[Type="Sample.FolderPshellCookdown.Class.MonitorServer"]/TopFolderPath$</Value>
						</Parameter>
						<Parameter>
							<Name>computerName</Name>
							<Value>$Target/Host/Property[Type="Windows!Microsoft.Windows.Computer"]/PrincipalName$</Value>
						</Parameter>
					</Parameters>
					<TimeoutSeconds>60</TimeoutSeconds>
				</DataSource>
			</Discovery>
		</Discoveries>
		<!--RULES-->
		<Rules>
			<Rule ID="Sample.FolderPshellCookdown.Rule.UserFolderCountExceeded" Enabled="true" Target="Sample.FolderPshellCookdown.Class.MonitorServer" ConfirmDelivery="true" Remotable="true" Priority="Normal" DiscardLevel="100" >
				<Category>Alert</Category>
				<DataSources>
					<DataSource ID="DS" TypeID="Windows!Microsoft.Windows.EventProvider">
						<ComputerName>$Target/Host/Property[Type="Windows!Microsoft.Windows.Computer"]/PrincipalName$</ComputerName>
						<LogName>Operations Manager</LogName>
						<Expression>
							<And>
								<Expression>
									<SimpleExpression>
										<ValueExpression>
											<XPathQuery Type="UnsignedInteger">EventDisplayNumber</XPathQuery>
										</ValueExpression>
										<Operator>Equal</Operator>
										<ValueExpression>
											<Value Type="UnsignedInteger">2612</Value>
										</ValueExpression>
									</SimpleExpression>
								</Expression>
								<Expression>
									<SimpleExpression>
										<ValueExpression>
											<XPathQuery Type="Integer">EventLevel</XPathQuery>
										</ValueExpression>
										<Operator>Equal</Operator>
										<ValueExpression>
											<Value Type="Integer">2</Value>
										</ValueExpression>
									</SimpleExpression>
								</Expression>
							</And>
						</Expression>
					</DataSource>
				</DataSources>
				<WriteActions>
					<WriteAction ID="Alert" TypeID="Health!System.Health.GenerateAlert">
						<Priority>1</Priority>
						<Severity>1</Severity>
						<AlertOwner />
						<AlertMessageId>$MPElement[Name="Sample.FolderPshellCookdown.Rule.UserFolderCountExceeded.AlertMessage"]$</AlertMessageId>
						<AlertParameters>
							<AlertParameter1>$Data/EventDescription$</AlertParameter1>
						</AlertParameters>
						<Suppression>
							<SuppressionValue>$Data/EventDisplayNumber$</SuppressionValue>
							<SuppressionValue>$Data/Channel$</SuppressionValue>
							<SuppressionValue>$Data/PublisherName$</SuppressionValue>
							<SuppressionValue>$Data/LoggingComputer$</SuppressionValue>
							<SuppressionValue>$Data/EventLevel$</SuppressionValue>
						</Suppression>
						<Custom1 />
						<Custom2 />
						<Custom3 />
						<Custom4 />
						<Custom5 />
						<Custom6 />
						<Custom7 />
						<Custom8 />
						<Custom9 />
						<Custom10 />
					</WriteAction>
				</WriteActions>
			</Rule>
		</Rules>		
		<!--MONITORS-->
		<Monitors>
			<UnitMonitor ID="Sample.FolderPshellCookdown.Monitor.SubFolderFileCount" Accessibility="Internal" Enabled="true" Target="Sample.FolderPshellCookdown.Class.SubFolder" ParentMonitorID="Health!System.Health.PerformanceState" Remotable="true" Priority="Normal" TypeID="Sample.FolderPshellCookdown.MonitorType.PowerShellFileCountPropertyBag" ConfirmDelivery="true">
				<Category>PerformanceHealth</Category>
				<AlertSettings AlertMessage="Sample.FolderPshellCookdown.Monitor.SubFolderFileCount.AlertMessage">
					<AlertOnState>Warning</AlertOnState>
					<AutoResolve>true</AutoResolve>
					<AlertPriority>Normal</AlertPriority>
					<AlertSeverity>Warning</AlertSeverity>
					<AlertParameters>
						<AlertParameter1>Top Folder: $Target/Host/Property[Type="Sample.FolderPshellCookdown.Class.MonitorServer"]/TopFolderPath$</AlertParameter1>
						<AlertParameter2>Sub Folder: $Target/Property[Type="Sample.FolderPshellCookdown.Class.SubFolder"]/SubFolderName$</AlertParameter2>
						<AlertParameter3>File Count: $Data/Context/Property[@Name='FileCount']$</AlertParameter3>
					</AlertParameters>
				</AlertSettings>
				<OperationalStates>
					<OperationalState ID="HealthStateWarning" MonitorTypeStateID="OverWarningThreshold" HealthState="Warning" />
					<OperationalState ID="HealthStateSuccess" MonitorTypeStateID="UnderThreshold" HealthState="Success" />
				</OperationalStates>
				<Configuration>
					<IntervalSeconds>60</IntervalSeconds>
					<SyncTime />
					<TopFolder>$Target/Host/Property[Type="Sample.FolderPshellCookdown.Class.MonitorServer"]/TopFolderPath$</TopFolder>
					<SubFolderName>$Target/Property[Type="Sample.FolderPshellCookdown.Class.SubFolder"]/SubFolderName$</SubFolderName>
					<WarningThreshold>100</WarningThreshold>
				</Configuration>
			</UnitMonitor>
		</Monitors>
	</Monitoring>
	<!--PRESENTATION-->
	<Presentation>
		<StringResources>
			<StringResource ID="Sample.FolderPshellCookdown.Monitor.SubFolderFileCount.AlertMessage" />
			<StringResource ID="Sample.FolderPshellCookdown.Rule.UserFolderCountExceeded.AlertMessage" />
		</StringResources>
	</Presentation>
	<LanguagePacks>
		<LanguagePack ID="ENU" IsDefault="true">
			<DisplayStrings>
				<DisplayString ElementID="Sample.FolderPshellCookdown">
					<Name>Sample.FolderPshellCookdown</Name>
				</DisplayString>
				<DisplayString ElementID="Sample.FolderPshellCookdown.Class.SubFolder">
					<Name>Sample.FolderPshellCookdown.Class.SubFolder</Name>
				</DisplayString>
				<DisplayString ElementID="Sample.FolderPshellCookdown.Class.SubFolder" SubElementID="SubFolderName">
					<Name>SubFolderName</Name>
				</DisplayString>
				<DisplayString ElementID="Sample.FolderPshellCookdown.Class.MonitorServer">
					<Name>Sample.FolderPshellCookdown.Class.MonitorServer</Name>
				</DisplayString>
				<DisplayString ElementID="Sample.FolderPshellCookdown.Class.MonitorServer" SubElementID="TopFolderPath">
					<Name>TopFolderPath</Name>
				</DisplayString>
				<DisplayString ElementID="Sample.FolderPshellCookdown.Relationship.MonitorServerHostsSubFolder">
					<Name>Sample.FolderPshellCookdown.Relationship.MonitorServerHostsSubFolder</Name>
				</DisplayString>
				<DisplayString ElementID="Sample.FolderPshellCookdown.DataSource.PowerShellFileCountPropertyBag">
					<Name>Sample.FolderPshellCookdown.DataSource.PowerShellFileCountPropertyBag</Name>
				</DisplayString>
				<DisplayString ElementID="Sample.FolderPshellCookdown.Monitor.SubFolderFileCount">
					<Name>Sample.FolderPshellCookdown.Monitor.SubFolderFileCount</Name>
				</DisplayString>
				<DisplayString ElementID="Sample.FolderPshellCookdown.Monitor.SubFolderFileCount" SubElementID="HealthStateSuccess">
					<Name>HealthStateSuccess</Name>
				</DisplayString>
				<DisplayString ElementID="Sample.FolderPshellCookdown.Monitor.SubFolderFileCount" SubElementID="HealthStateWarning">
					<Name>HealthStateWarning</Name>
				</DisplayString>
				<DisplayString ElementID="Sample.FolderPshellCookdown.MonitorType.PowerShellFileCountPropertyBag">
					<Name>Sample.FolderPshellCookdown.MonitorType.PowerShellFileCountPropertyBag</Name>
				</DisplayString>
				<DisplayString ElementID="Sample.FolderPshellCookdown.Discovery.MonitorServer">
					<Name>Sample.FolderPshellCookdown.Discovery.MonitorServer</Name>
				</DisplayString>
				<DisplayString ElementID="Sample.FolderPshellCookdown.Discovery.SubFolder">
					<Name>Sample.FolderPshellCookdown.Discovery.SubFolder</Name>
				</DisplayString>
				<DisplayString ElementID="Sample.FolderPshellCookdown.Monitor.SubFolderFileCount.AlertMessage">
					<Name>Sample.FolderPshellCookdown.Monitor.SubFolderFileCount.AlertMessage</Name>
					<Description>{0}
{1}
{2}</Description>
				</DisplayString>
				<DisplayString ElementID="Sample.FolderPshellCookdown.Rule.UserFolderCountExceeded">
					<Name>Sample.FolderPshellCookdown.Rule.UserFolderCountExceeded</Name>
				</DisplayString>
				<DisplayString ElementID="Sample.FolderPshellCookdown.Rule.UserFolderCountExceeded.AlertMessage">
					<Name>Sample.FolderPshellCookdown.Rule.UserFolderCountExceeded.AlertMessage </Name>
					<Description>{0}</Description>
				</DisplayString>
			</DisplayStrings>
		</LanguagePack>
	</LanguagePacks>
</ManagementPack>